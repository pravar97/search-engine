[{"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\index.js":"1","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\App.js":"2","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\ResultsPage.js":"3","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\SearchPage.js":"4","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\PiecePage.js":"5","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\ScrollUp.js":"6","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\store\\RootStore.js":"7","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\PieceCard.js":"8","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\NavigBar.js":"9","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\SearchBar.js":"10","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\store\\PieceStore.js":"11"},{"size":219,"mtime":1611753267651,"results":"12","hashOfConfig":"13"},{"size":1000,"mtime":1613573092516,"results":"14","hashOfConfig":"13"},{"size":3202,"mtime":1613646047508,"results":"15","hashOfConfig":"13"},{"size":2662,"mtime":1613646906438,"results":"16","hashOfConfig":"13"},{"size":5060,"mtime":1613647052909,"results":"17","hashOfConfig":"13"},{"size":401,"mtime":1612350595185,"results":"18","hashOfConfig":"13"},{"size":162,"mtime":1613573504793,"results":"19","hashOfConfig":"13"},{"size":669,"mtime":1613566355961,"results":"20","hashOfConfig":"13"},{"size":862,"mtime":1613644584352,"results":"21","hashOfConfig":"13"},{"size":687,"mtime":1613645467850,"results":"22","hashOfConfig":"13"},{"size":3945,"mtime":1613745069784,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"cf5jll",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\index.js",[],["52","53"],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\App.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\ResultsPage.js",["54","55","56"],"import PieceCard from '../components/PieceCard';\r\nimport NavigBar from '../components/NavigBar';\r\nimport { observer,inject } from 'mobx-react';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport { Ellipsis, Ring } from 'react-spinners-css';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport {BottomScrollListener} from 'react-bottom-scroll-listener';\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr fluid=\"true\"\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.01\r\n        }}\r\n    />\r\n);\r\n\r\n\r\nconst ResultsPage = inject(\"pieceStore\")(\r\n  observer(({ pieceStore, history}) => {\r\n    const pieces = pieceStore.pieces;\r\n    const [query, setQuery] = useState(pieceStore.query);\r\n    return (\r\n      <div>\r\n        <div style={{padding: \"0 0em 0em 1em\", marginBottom: \"-1em\"}}>\r\n          <NavigBar\r\n            onChange={e => setQuery(e.target.value)}\r\n            getQuery = {query}\r\n            onSearch={() => {\r\n               pieceStore.clear();\r\n               pieceStore.setQuery(query);\r\n               pieceStore.searchPieces();\r\n               history.push(\"/result\");\r\n            }}\r\n            onClick={() => history.push(\"/\")}\r\n          />\r\n        </div>\r\n        <ColoredLine color = \"LightGrey\" />\r\n        <Container fluid style={{padding: \"0 10% 0em 10%\"}}>\r\n          <Row>\r\n            <Col>\r\n              {pieces.length == 0 ?\r\n                <div>\r\n                  <span style={{float:'left'}}>\r\n                    <h6 style={{color:\"gray\"}}> Retrieving results </h6>\r\n                  </span>\r\n                  <span style={{paddingLeft:\".5em\"}}>\r\n                    <Ellipsis color = \"gray\" size = {24}/>\r\n                  </span>\r\n                </div>:\r\n                <h6 style={{color:\"LightGrey\"}}> Retrieved {pieceStore.ids.length} results in {(pieceStore.timeTaken+\"\").substring(0, 4)} seconds</h6>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row style={{paddingBottom: \"1em\"}}>\r\n            <Col>\r\n            <CardColumns>\r\n              { pieces.map(piece => {\r\n                  if (piece) {\r\n                    return (\r\n                      <PieceCard\r\n                        piece = {piece}\r\n                        onSelect = {() => {\r\n                          pieceStore.selectPiece(piece);\r\n                          history.push(\"/piece\");\r\n                        }}\r\n                      />\r\n                   )\r\n                 }\r\n                 return null\r\n              }) }\r\n            </CardColumns>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Container>\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}>\r\n        {pieces.length != pieceStore.ids.length &&\r\n          <Ring color = \"gray\" size = {35}/>\r\n        }\r\n        </div>\r\n        <BottomScrollListener onBottom={() => pieceStore.loadMore()} />;\r\n      </div>\r\n    );\r\n  })\r\n);\r\n\r\nexport default ResultsPage;\r\n","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\SearchPage.js",["57","58"],"import React from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport { observer,inject } from 'mobx-react';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport logo from '../resources/images/logo.png';\r\n\r\nconst SearchPage = inject(\"pieceStore\")(\r\n  observer(({ pieceStore, history }) => {\r\n    pieceStore.clear();\r\n    pieceStore.clearQuery();\r\n    const [query, setQuery] = useState(\"\");\r\n    return (\r\n      <div class=\"hero_image\">\r\n        <Container>\r\n          <Row className=\"text-center\">\r\n            <Col class=\"align-self-center\">\r\n              <img\r\n                width = \"120\" height=\"120\"\r\n                src={logo}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-center\" style = {{paddingTop: '1em'}}>\r\n            <Col>\r\n              <h2> Art Search </h2>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <SearchBar\r\n               onChange={e => setQuery(e.target.value)}\r\n               query = {query}\r\n               onSearch={() => {\r\n                  pieceStore.setQuery(query);\r\n                  pieceStore.searchPieces();\r\n                  history.push(\"/result\");\r\n               }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-center\">\r\n            <Col class=\"align-self-center\">\r\n              <button\r\n                onClick={() => {\r\n                   pieceStore.setQuery(query)\r\n                   pieceStore.searchPieces();\r\n                   history.push(\"/result\");\r\n                }}\r\n                className=\"btn btn-outline-primary\"\r\n                type=\"button\"\r\n                style = {{backgroundColor: \"#E8E8E8\", color: \"black\", borderColor:\"white\", width:\"9em\", height:\"2.2em\"}}\r\n              >\r\n              Art search\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  pieceStore.setQuery(query)\r\n                  pieceStore.searchPieces();\r\n                  history.push(\"/piece\");\r\n                }}\r\n                className=\"btn btn-outline-primary\"\r\n                type=\"button\"\r\n                style = {{backgroundColor: \"#E8E8E8\", color: \"black\", borderColor:\"white\", width:\"9em\", height:\"2.2em\", marginLeft:\"2em\"}}\r\n              >\r\n              I'm feelin artsy\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  })\r\n);\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\PiecePage.js",["59","60","61"],"import React, { useState } from 'react';\r\nimport { observer,inject } from 'mobx-react';\r\n\r\nimport NavigBar from '../components/NavigBar';\r\nimport PieceCard from '../components/PieceCard';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.05\r\n        }}\r\n    />\r\n);\r\n\r\nconst DescriptionText = ({tag, value}) => (\r\n  <h6> {tag}: <span style = {{color:\"Gray\"}}> {value}  </span> </h6>\r\n)\r\n\r\nconst PiecePage = inject(\"pieceStore\")(\r\n  observer(({ pieceStore, history}) => {\r\n    const piece = pieceStore.selectedPiece;\r\n    const [open, setOpen] = useState(false);\r\n    const [query, setQuery] = useState(pieceStore.query);\r\n    const ind = piece.description!= null ? piece.description.indexOf('.') : -1\r\n    //var description = piece.description.substring(0,0.3*piece.description.length) + \"...\";\r\n    return (\r\n      <div>\r\n      <Container fluid style = {{marginBottom: \"-1em\"}}>\r\n          <Row>\r\n            <Col xs={0.05} style={{padding: \"1.3em 0em 0em 1em\"}}>\r\n              <img style = {{cursor:'pointer'}} width = \"30\" height=\"30\"\r\n                onClick = {() => history.push(\"/result\")}\r\n                src=\"https://www.materialui.co/materialIcons/navigation/arrow_back_black_192x192.png\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <NavigBar\r\n                onChange={e => setQuery(e.target.value)}\r\n                getQuery = {query}\r\n                onSearch={() => {\r\n                   pieceStore.clear();\r\n                   pieceStore.setQuery(query);\r\n                   pieceStore.searchPieces();\r\n                   history.push(\"/result\");\r\n                }}\r\n                onClick={() => history.push(\"/\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <ColoredLine color = \"LightGrey\"/>\r\n        <Container style={{paddingTop: \"0.7em\", paddingLeft: \"5%\", paddingRight: \"5%\"}}>\r\n          <Row className=\"justify-content-center\">\r\n            <Image src={piece.image} height=\"400em\"/>\r\n          </Row>\r\n          <Row style={{padding: \"2em 0 0.6em 0\"}}>\r\n            <Col>\r\n              <h3> {piece.title} </h3>\r\n              <h5 style = {{color:\"Gray\"}}>\r\n                {piece.author + \", \" + piece.date}\r\n              </h5>\r\n              <ColoredLine color=\"LightGrey\" />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <h4 style={{}}> Details </h4>\r\n              <DescriptionText tag={\"Medium\"} value={piece.form} />\r\n              <DescriptionText tag={\"Technique\"} value={piece.technique} />\r\n              <DescriptionText tag={\"Timeframe\"} value={piece.timeframe} />\r\n              <DescriptionText tag={\"Location\"} value={piece.location} />\r\n              <DescriptionText tag={\"School\"} value={piece.school} />\r\n              <h6> Source: <span style = {{color:\"Gray\"}}> <a href={piece.source_url}>{piece.source.toUpperCase()}</a>  </span> </h6>\r\n            </Col>\r\n            {piece.description &&\r\n              <Col>\r\n                <h4> About the piece </h4>\r\n                <p style={{display:\"inline\"}}>\r\n                  {piece.description.substring(0,ind)\r\n                    + (open ? piece.description.substring(ind, piece.description.length) : \".\")}\r\n                </p>\r\n                <p\r\n                  onClick={() => setOpen(!open)}\r\n                  aria-controls=\"example-collapse-text\"\r\n                  aria-expanded={open}\r\n                  style = {{cursor:'pointer', color:\"Gray\"}}\r\n                >\r\n                  Read {open ? \"Less\" : \"More\"}\r\n                </p>\r\n              </Col>\r\n            }\r\n          </Row>\r\n          <Row style={{paddingTop: \"2em\", paddingBottom: \"1em\"}}>\r\n            <Col>\r\n              <h3>More by {piece.author}</h3>\r\n            </Col>\r\n            <Col style={{paddingTop: \"0em\"}}>\r\n              <CardColumns>\r\n                {pieceStore.artist_pieces.map(piece => {\r\n                    if (piece) {\r\n                      return (\r\n                        <PieceCard\r\n                          piece = {piece}\r\n                          onSelect = {() => {\r\n                            pieceStore.selectPiece(piece);\r\n                            history.push(\"/piece\");\r\n                          }}\r\n                        />\r\n                     )\r\n                   }\r\n                   return null\r\n                }) }\r\n              </CardColumns>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  })\r\n);\r\n\r\nexport default PiecePage;\r\n\r\n//\r\n// <div>\r\n//\r\n//   <img src = {piece.image} alt=\"image\"/>\r\n//   <h2> {piece.title} </h2>\r\n// </div>\r\n","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\ScrollUp.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\store\\RootStore.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\PieceCard.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\NavigBar.js",["62"],"import React from 'react'\r\nimport { observer } from 'mobx-react'\r\n\r\nimport SearchBar from './SearchBar'\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport logo from '../resources/images/logo.png';\r\n\r\nconst NavigBar = observer(({ onSearch, onChange, getQuery, onClick }) => (\r\n  <Container fluid>\r\n    <Row>\r\n      <Col>\r\n        <img\r\n          style = {{cursor:'pointer', marginTop:'0.4em'}}\r\n          width=\"50\"\r\n          onClick={onClick}\r\n          src={logo}\r\n        />\r\n      </Col>\r\n      <Col xs={10}>\r\n        <div>\r\n          <SearchBar\r\n           onChange={onChange}\r\n           query = {getQuery}\r\n           onSearch={onSearch}\r\n          />\r\n        </div>\r\n      </Col>\r\n      <Col/>\r\n    </Row>\r\n  </Container>\r\n));\r\n\r\n\r\n\r\nexport default NavigBar;\r\n","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\SearchBar.js",["63"],"import React from \"react\";\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n//import search_icon from '../resources/images/search_icon.png';\r\n\r\nconst SearchBar = observer(({ onSearch, onChange, query }) => (\r\n  <div style={{padding: \"1em 5em 1em 5em\"}}>\r\n  <Form>\r\n    <Form.Control\r\n     style={{borderRadius: '100px', paddingLeft:'1.2em'}}\r\n     //style = {{background: \"#fbfbfb\"}}\r\n     type=\"text\"\r\n     key=\"random1\"\r\n     value={query}\r\n     placeholder={query != \"\" ? \"\": \"Search\"}\r\n     onChange={onChange}\r\n     onKeyPress={event => event.key === \"Enter\" && onSearch()}\r\n    />\r\n  </Form>\r\n  </div>\r\n));\r\n\r\n\r\n\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\store\\PieceStore.js",["64","65","66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":13,"column":8,"nodeType":"74","messageId":"75","endLine":13,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":51,"column":30,"nodeType":"78","messageId":"79","endLine":51,"endColumn":32},{"ruleId":"76","severity":1,"message":"80","line":91,"column":24,"nodeType":"78","messageId":"79","endLine":91,"endColumn":26},{"ruleId":"72","severity":1,"message":"81","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":24,"column":15,"nodeType":"84","endLine":27,"endColumn":17},{"ruleId":"72","severity":1,"message":"85","line":12,"column":8,"nodeType":"74","messageId":"75","endLine":12,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":13,"column":8,"nodeType":"74","messageId":"75","endLine":13,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":41,"column":15,"nodeType":"84","endLine":44,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":16,"column":9,"nodeType":"84","endLine":21,"endColumn":11},{"ruleId":"76","severity":1,"message":"80","line":17,"column":25,"nodeType":"78","messageId":"79","endLine":17,"endColumn":27},{"ruleId":"72","severity":1,"message":"86","line":1,"column":30,"nodeType":"74","messageId":"75","endLine":1,"endColumn":38},{"ruleId":"87","severity":1,"message":"88","line":3,"column":1,"nodeType":"89","messageId":"79","endLine":5,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":8,"column":11,"nodeType":"78","messageId":"79","endLine":8,"endColumn":13},{"ruleId":"76","severity":1,"message":"80","line":87,"column":19,"nodeType":"78","messageId":"79","endLine":87,"endColumn":21},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'CardColumns' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Collapse' is defined but never used.","'computed' is defined but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","no-global-assign","no-unsafe-negation"]