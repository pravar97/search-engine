[{"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\index.js":"1","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\App.js":"2","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\ResultsPage.js":"3","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\SearchPage.js":"4","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\ScrollUp.js":"5","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\PiecePage.js":"6","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\store\\RootStore.js":"7","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\PieceCard.js":"8","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\NavigBar.js":"9","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\SearchBar.js":"10","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\store\\PieceStore.js":"11"},{"size":219,"mtime":1614766704958,"results":"12","hashOfConfig":"13"},{"size":1000,"mtime":1614768085949,"results":"14","hashOfConfig":"13"},{"size":4692,"mtime":1614863012210,"results":"15","hashOfConfig":"13"},{"size":4067,"mtime":1614854935842,"results":"16","hashOfConfig":"13"},{"size":401,"mtime":1612350595185,"results":"17","hashOfConfig":"13"},{"size":6628,"mtime":1614862731318,"results":"18","hashOfConfig":"13"},{"size":152,"mtime":1614768100185,"results":"19","hashOfConfig":"13"},{"size":884,"mtime":1614781567371,"results":"20","hashOfConfig":"13"},{"size":880,"mtime":1614863103552,"results":"21","hashOfConfig":"13"},{"size":749,"mtime":1614863083324,"results":"22","hashOfConfig":"13"},{"size":7316,"mtime":1614860947491,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"cf5jll",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\index.js",[],["49","50"],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\App.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\ResultsPage.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\SearchPage.js",["51"],"import React from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport { observer,inject } from 'mobx-react';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport logo from '../resources/images/logo.png';\r\n\r\nconst SearchPage = inject(\"pieceStore\")(\r\n  observer(({ pieceStore, history }) => {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    pieceStore.clear();\r\n    pieceStore.clearQuery();\r\n    return (\r\n      <div className=\"hero_image\">\r\n        <Container>\r\n          <Row className=\"text-center\">\r\n            <Col class=\"align-self-center\">\r\n              <img\r\n                width = \"120\" height=\"120\"\r\n                alt=\"logo\"\r\n                src={logo}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-center\" style = {{paddingTop: '1em'}}>\r\n            <Col>\r\n              <h2> Art Search </h2>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <SearchBar\r\n               onChange={e => setQuery(e.target.value)}\r\n               query = {query}\r\n               onSearch={(e) => {if (query !== \"\" ){\r\n                  pieceStore.setQuery(query);\r\n                  pieceStore.searchPieces();\r\n                  history.push(\"/result\");\r\n                }\r\n              }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"text-center\">\r\n            <Col class=\"align-self-center\">\r\n              <button\r\n                onClick={() => {if (query !== \"\"){\r\n                   pieceStore.setQuery(query)\r\n                   pieceStore.searchPieces();\r\n                   history.push(\"/result\");\r\n                 }\r\n                }}\r\n                className=\"btn btn-outline-primary\"\r\n                type=\"button\"\r\n                style = {{backgroundColor: \"#E8E8E8\", color: \"black\", borderColor:\"white\", width:\"9em\", height:\"2.2em\"}}\r\n              >\r\n              Art search\r\n              </button>\r\n              <button\r\n                onClick={() => {if (query !== \"\"){\r\n                  pieceStore.setQuery(query)\r\n                  pieceStore.feelingArtsy();\r\n                  history.push(\"/piece\");\r\n                }\r\n                }}\r\n                className=\"btn btn-outline-primary\"\r\n                type=\"button\"\r\n                style = {{backgroundColor: \"#E8E8E8\", color: \"black\", borderColor:\"white\", width:\"9em\", height:\"2.2em\", marginLeft:\"2em\"}}\r\n              >\r\n              I'm feelin artsy\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"text-center\" style = {{paddingTop:\"1em\"}}>\r\n            <Col class=\"align-self-center\">\r\n              <p\r\n                style = {{fontSize: \"10%\"}}\r\n                onClick={() => setOpen(!open)}\r\n                aria-controls=\"example-collapse-text\"\r\n                aria-expanded={open}\r\n                style = {{cursor:'pointer', color:\"Gray\"}}\r\n              >\r\n                Advanced Search\r\n              </p>\r\n              <Collapse in={open}>\r\n              <Form style = {{paddingLeft:\"20%\", paddingRight:\"20%\"}} >\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\" >\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter title\" />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                    <Form.Label>Artist</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter artist\" />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                </Form>\r\n              </Collapse>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  })\r\n);\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\ScrollUp.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\pages\\PiecePage.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\store\\RootStore.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\PieceCard.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\NavigBar.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\components\\SearchBar.js",[],"C:\\Users\\vasnt\\Documents\\EDI2020\\ART_SE\\TTDS-Art-Search\\art_se\\src\\store\\PieceStore.js",["52"],"import { observable, action, makeAutoObservable } from \"mobx\";\nimport { persistence, StorageAdapter } from 'mobx-persist-store';\n\nString.prototype.toProperCase = function () {\n  return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n};\n\nfunction printText(txt) {\n  if (txt === undefined) {\n    return \"\";\n  } else {\n    return txt;\n  }\n}\n\nexport class Piece {\n\n  @observable author\n  @observable title\n  @observable date\n  @observable century\n  @observable medium\n  @observable description\n  @observable form\n  @observable school\n  @observable image\n  @observable source\n  @observable source_url\n  @observable repository\n  @observable dimensions\n\n  constructor (author,title,date,medium,description,form,school, image, source, source_url, repository, dimensions) {\n    this.author = printText(author.split(',')[1]) + \" \" + printText(author.split(',')[0].toProperCase());\n    this.author_no_format = author;\n    this.title = title;\n    this.date = date;\n    this.medium = medium;\n    this.description = description;\n    this.form = form.toProperCase();\n    this.school = school;\n    this.image = image;\n    this.source=source;\n    this.source_url = source_url;\n    this.repository = repository;\n    this.dimensions = dimensions;\n  }\n}\n\nfunction readStore(name) {\n  return new Promise((resolve) => {\n    const data = localStorage.getItem(name);\n    resolve(data);\n  });\n}\n\nfunction writeStore(name, content) {\n  return new Promise((resolve) => {\n    localStorage.setItem(name, content);\n    resolve();\n  });\n}\n\nclass PieceStore {\n  rootStore;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n  }\n  @observable selectedPiece = observable();\n  @observable pieces = observable.array();\n  @observable artist_pieces = observable.array();\n  @observable pieceArr = observable.array();\n  @observable scroll_ind: number = 0;\n  @observable ids = observable.array();\n  @observable query = \"\";\n  @observable timeTaken = 0;\n  @observable lucky = false;\n  @observable no_results = false;\n\n  @action setQuery(query) {\n    this.query = query;\n  }\n\n  @action clearQuery() {\n    this.query = \"\"\n  }\n\n  @action clearSelectedPiece() {\n    this.selectedPiece = observable();\n    this.artist_pieces = observable.array();\n  }\n\n\n  @action clear() {\n    console.log(\"Clearing pieces\")\n    this.pieces = observable.array();\n    this.artist_pieces = observable.array();\n    this.pieceArr = observable.array();\n    this.selectedPiece = null;\n    this.scroll_ind = 0\n    this.timeTaken = null;\n    this.ids = observable.array();\n    this.lucky = false;\n    this.no_results =  observable.array();\n  }\n\n  @action selectPiece(piece) {\n    this.artist_pieces = observable.array();\n    this.getArtistPieces(piece.author_no_format);\n    this.pieceArr.push(\"0\")\n    console.log(this.artist_pieces)\n    this.selectedPiece = piece;\n  }\n\n  @action searchPieces() {\n    console.log(\"Searching pieces\")\n    if(this.query !== \"\"){\n      const time =  performance.now();\n      this.searchPiece(this.query);\n      this.timeTaken =  performance.now() - time;\n    }\n  }\n\n  @action searchPiecesWithQuery(e, query) {\n    console.log(\"Searching pieces\")\n    this.query = query\n    if(this.query !== \"\"){\n      const time =  performance.now();\n      this.searchPiece(this.query);\n      this.timeTaken =  performance.now() - time;\n    }\n  }\n\n  @action searchPiece() {\n    console.log(\"making request for ids\")\n    fetch('/get_results?q=' + this.query)\n      .then(response => {\n        console.log(response)\n        return response.json()\n      })\n      .then(json => {\n        const ids = Object.values(json)\n        console.log(json)\n        const sliced_ids = ids.slice(this.scroll_ind,this.scroll_ind+20)\n        this.scroll_ind = this.scroll_ind + 20;\n        this.ids = ids;\n        console.log(ids)\n        this.getPieces(sliced_ids)\n      })\n  }\n\n  @action feelingArtsy() {\n    this.lucky = true\n    console.log(\"making request for ids\")\n    fetch('/get_results?q=' + this.query)\n      .then(response => {\n        console.log(response)\n        return response.json()\n      })\n      .then(json => {\n        const ids = Object.values(json)\n        this.ids = ids;\n        this.getLuckyPiece([this.ids[0]])\n      })\n  }\n\n  @action getLuckyPiece(piece_id){\n    console.log(\"making request for lucky piece\")\n    fetch('/results2db?r=' + JSON.stringify(piece_id))\n      .then(response => {\n        console.log(response)\n        return response.json()\n      })\n      .then(json => {\n        console.log(json)\n        if (json[null] !== null){\n          this.addSelectedPiece(json);\n          this.pieceArr.push(\"0\")\n        }\n        else{\n          this.no_results.push(\"1\")\n        }\n\n      })\n  }\n\n  @action loadMore() {\n    const sliced_ids = this.ids.slice(this.scroll_ind,this.scroll_ind+20)\n    this.scroll_ind = this.scroll_ind + 20;\n    this.getPieces(sliced_ids)\n  }\n\n  @action getPieces(ids) {\n    console.log(\"making request for pieces\")\n    fetch('/results2db?r=' + JSON.stringify(ids))\n      .then(response => {\n        console.log(response)\n        return response.json()\n      })\n      .then(json => {\n        this.addPieces(json, this.pieces)\n      })\n  }\n\n  @action getArtistPieces(artist) {\n    console.log(\"making request for artist pieces\")\n    fetch('/artist?artist=' + artist)\n      .then(response => {\n        console.log(response)\n        return response.json()\n      })\n      .then(json => this.addPieces(json, this.artist_pieces))\n  }\n\n  @action addSelectedPiece(json) {\n    console.log(\"Adding pieces\")\n    console.log(json)\n    const pieces = [];\n    Object.values(json).forEach((piece) => {\n      pieces.push(new Piece(\n        piece.author,\n        piece.title,\n        piece.date,\n        piece.medium,\n        piece.description,\n        piece.form,\n        piece.school,\n        piece.image_url,\n        piece.source,\n        piece.source_url,\n        piece.repository,\n        piece.dimensions\n      ))\n    });\n    this.selectedPiece = pieces[0];\n    this.getArtistPieces(pieces[0].author_no_format);\n  }\n\n  @action addPieces(json,array) {\n    console.log(\"Adding pieces\")\n    const pieces = [];\n    console.log(json)\n    Object.values(json).forEach((piece) => {\n      pieces.push(new Piece(\n        piece.author,\n        piece.title,\n        piece.date,\n        piece.medium,\n        piece.description,\n        piece.form,\n        piece.school,\n        piece.image_url,\n        piece.source,\n        piece.source_url,\n        piece.repository,\n        piece.dimensions\n      ))\n    });\n    if (pieces.length === 0 && this.pieces.length === 0) {\n      this.no_results.push(\"1\")\n    }\n    array.replace(array.concat(pieces))\n\n  }\n\n  @action getSelectedPiece() {\n    return this.selectedPiece;\n  }\n}\n\nexport default persistence({\n  name: 'PieceStore',\n  properties: ['pieces', 'selectedPiece', 'artist_pieces', 'pieceArr', 'ids', 'query', 'timeTaken', 'lucky', 'no_results'],\n  adapter: new StorageAdapter({\n    read: readStore,\n    write: writeStore,\n  }),\n})(new PieceStore());\n\n// this.pieces = observable.array();\n// this.artist_pieces = observable.array();\n// this.pieceArr = observable.array();\n// this.selectedPiece = null;\n// this.scroll_ind = 0\n// this.timeTaken = null;\n// this.ids = observable.array();\n// this.lucky = false;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":91,"column":17,"nodeType":"59","endLine":91,"endColumn":59},{"ruleId":"60","severity":1,"message":"61","line":4,"column":1,"nodeType":"62","messageId":"63","endLine":6,"endColumn":2},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-global-assign","no-unsafe-negation"]