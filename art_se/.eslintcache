[{"/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/index.js":"1","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/App.js":"2","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/pages/SearchPage.js":"3","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/pages/ResultsPage.js":"4","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/pages/PiecePage.js":"5","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/store/RootStore.js":"6","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/store/PieceStore.js":"7","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/store/SearchStore.js":"8","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/components/SearchBar.js":"9","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/components/PieceCard.js":"10","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/components/NavigBar.js":"11","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/components/ScrollUp.js":"12"},{"size":212,"mtime":1611950835431,"results":"13","hashOfConfig":"14"},{"size":967,"mtime":1612953548342,"results":"15","hashOfConfig":"14"},{"size":1980,"mtime":1612953548342,"results":"16","hashOfConfig":"14"},{"size":1838,"mtime":1612953548342,"results":"17","hashOfConfig":"14"},{"size":4728,"mtime":1612953548342,"results":"18","hashOfConfig":"14"},{"size":247,"mtime":1611057030000,"results":"19","hashOfConfig":"14"},{"size":2441,"mtime":1613211107125,"results":"20","hashOfConfig":"14"},{"size":906,"mtime":1612953548342,"results":"21","hashOfConfig":"14"},{"size":477,"mtime":1613175007564,"results":"22","hashOfConfig":"14"},{"size":587,"mtime":1612543133710,"results":"23","hashOfConfig":"14"},{"size":864,"mtime":1612543133710,"results":"24","hashOfConfig":"14"},{"size":387,"mtime":1612543133710,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xtdhq1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/index.js",[],["57","58"],"/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/App.js",[],"/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/pages/SearchPage.js",["59","60"],"import React from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport { observer,inject } from 'mobx-react';\r\n\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport logo from '../resources/images/logo.png';\r\n\r\nconst SearchPage = inject(\"searchStore\")(\r\n  observer(({ searchStore, history }) => {\r\n    searchStore.clearQuery();\r\n    searchStore.clear();\r\n    return (\r\n      <div class=\"hero_image\">\r\n        <Container>\r\n          <Row className=\"text-center\">\r\n            <Col class=\"align-self-center\">\r\n              <img\r\n                width = \"120\" height=\"120\"\r\n                src={logo}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-center\" style = {{paddingTop: '1em'}}>\r\n            <Col>\r\n              <h2> Art Search </h2>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <SearchBar\r\n               onChange={e => searchStore.setQuery(e.target.value)}\r\n               query = {searchStore.getQuery()}\r\n               onSearch={() => {\r\n                  searchStore.searchPieces();\r\n                  history.push(\"/result\");\r\n               }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"text-center\">\r\n            <Col class=\"align-self-center\">\r\n              <button\r\n                onClick={() => {\r\n                   searchStore.searchPieces();\r\n                   history.push(\"/result\");\r\n                }}\r\n                className=\"btn btn-outline-primary\"\r\n                type=\"button\"\r\n                style = {{backgroundColor: \"steelblue\", color: \"white\", borderColor:\"white\"}}\r\n              >\r\n              Search\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  })\r\n);\r\n\r\nexport default SearchPage;\r\n","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/pages/ResultsPage.js",[],"/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/pages/PiecePage.js",["61","62","63"],"import React, { useState } from 'react';\r\nimport { observer,inject } from 'mobx-react';\r\n\r\nimport NavigBar from '../components/NavigBar';\r\nimport PieceCard from '../components/PieceCard';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 0.05\r\n        }}\r\n    />\r\n);\r\n\r\nconst DescriptionText = ({tag, value}) => (\r\n  <h6> {tag}: <span style = {{color:\"Gray\"}}> {value}  </span> </h6>\r\n)\r\n\r\nconst PiecePage = inject(\"searchStore\", \"pieceStore\")(\r\n  observer(({ searchStore, pieceStore, history}) => {\r\n    const piece = pieceStore.getSelectedPiece();\r\n    const [open, setOpen] = useState(false);\r\n    const ind = piece.description.indexOf('.')\r\n    //var description = piece.description.substring(0,0.3*piece.description.length) + \"...\";\r\n    return (\r\n      <div>\r\n      <Container fluid>\r\n          <Row>\r\n            <Col xs={0.05} style={{padding: \"1.3em 0em 0em 1em\"}}>\r\n              <img style = {{cursor:'pointer'}} width = \"30\" height=\"30\"\r\n                onClick = {() => history.push(\"/result\")}\r\n                src=\"https://www.materialui.co/materialIcons/navigation/arrow_back_black_192x192.png\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <NavigBar\r\n                onChange={e => searchStore.setQuery(e.target.value)}\r\n                getQuery = {searchStore.getQuery()}\r\n                onSearch={() => {\r\n                   searchStore.searchPieces();\r\n                   history.push(\"/result\");\r\n                }}\r\n                onClick={() => history.push(\"/\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Container style={{paddingTop: \"0.7em\", paddingLeft: \"5%\", paddingRight: \"5%\"}}>\r\n          <Row className=\"justify-content-center\">\r\n            <Image src={piece.image} height=\"400em\"/>\r\n          </Row>\r\n          <Row style={{padding: \"2em 0 0.6em 0\"}}>\r\n            <Col>\r\n              <h3> {piece.title} </h3>\r\n              <h5 style = {{color:\"Gray\"}}>\r\n                {piece.author + \", \" + piece.date}\r\n              </h5>\r\n              <ColoredLine color=\"LightGrey\" />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <h4 style={{}}> Details </h4>\r\n              <DescriptionText tag={\"Medium\"} value={piece.form} />\r\n              <DescriptionText tag={\"Technique\"} value={piece.technique} />\r\n              <DescriptionText tag={\"Timeframe\"} value={piece.timeframe} />\r\n              <DescriptionText tag={\"Location\"} value={piece.location} />\r\n              <DescriptionText tag={\"School\"} value={piece.school} />\r\n            </Col>\r\n            {piece.description &&\r\n              <Col>\r\n                <h4> About the piece </h4>\r\n                <p style={{display:\"inline\"}}>\r\n                  {piece.description.substring(0,ind)\r\n                    + (open ? piece.description.substring(ind, piece.description.length) : \".\")}\r\n                </p>\r\n                <p\r\n                  onClick={() => setOpen(!open)}\r\n                  aria-controls=\"example-collapse-text\"\r\n                  aria-expanded={open}\r\n                  style = {{cursor:'pointer', color:\"Gray\"}}\r\n                >\r\n                  Read {open ? \"Less\" : \"More\"}\r\n                </p>\r\n              </Col>\r\n            }\r\n          </Row>\r\n          <Row style={{paddingTop: \"2em\"}}>\r\n            <Col>\r\n              <h3>More by {piece.author}</h3>\r\n            </Col>\r\n            <Col style={{paddingTop: \"0em\"}}>\r\n              <CardColumns>\r\n                {searchStore.getArtistPieces(piece.author).map(piece => {\r\n                    if (piece) {\r\n                      return (\r\n                        <PieceCard\r\n                          piece = {piece}\r\n                          onSelect = {() => {\r\n                            searchStore.selectPiece(piece);\r\n                            history.push(\"/piece\");\r\n                          }}\r\n                        />\r\n                     )\r\n                   }\r\n                   return null\r\n                }) }\r\n              </CardColumns>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  })\r\n);\r\n\r\nexport default PiecePage;\r\n\r\n//\r\n// <div>\r\n//\r\n//   <img src = {piece.image} alt=\"image\"/>\r\n//   <h2> {piece.title} </h2>\r\n// </div>\r\n","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/store/RootStore.js",[],"/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/store/PieceStore.js",["64","65","66"],"import { observable, action, computed } from \"mobx\";\r\n\r\nString.prototype.toProperCase = function () {\r\n  return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n};\r\n\r\nfunction printText(txt) {\r\n  if (txt == undefined) {\r\n    return \"\";\r\n  } else {\r\n    return txt;\r\n  }\r\n}\r\n\r\nexport class Piece {\r\n\r\n  @observable author\r\n  @observable title\r\n  @observable date\r\n  @observable century\r\n  @observable technique\r\n  @observable size\r\n  @observable location\r\n  @observable description\r\n  @observable form\r\n  @observable school\r\n  @observable image\r\n\r\n  constructor (author,title,date,timeframe,technique,location,description,form,school, image) {\r\n    this.author = printText(author.split(',')[1]) + \" \" + printText(author.split(',')[0].toProperCase());\r\n    this.author_no_format = author;\r\n    this.title = title;\r\n    this.date = date;\r\n    this.timeframe = timeframe;\r\n    this.technique = technique;\r\n    this.location = location;\r\n    this.description = description;\r\n    this.form = form;\r\n    this.school = school;\r\n    this.image = image;\r\n  }\r\n}\r\n\r\nexport default class PieceStore {\r\n\r\n  @observable selectedPiece = observable();\r\n  @observable pieces = observable.array();\r\n  @observable artist_pieces = observable.array();\r\n\r\n  @action clear() {\r\n    this.pieces = observable.array();\r\n  }\r\n\r\n  @action searchPiece(query) {\r\n    console.log(\"making request\")\r\n    fetch('/result?q=' + query)\r\n      .then(response => {\r\n        console.log(response)\r\n        return response.json()\r\n      })\r\n      .then(json => this.addPieces(json, this.pieces))\r\n  }\r\n\r\n  @action getArtistPieces(artist) {\r\n    console.log(\"making request\")\r\n    fetch('https://ttds-group-1-project.nw.r.appspot.com/artist?artist=' + artist)\r\n      .then(response => {\r\n        console.log(response)\r\n        return response.json()\r\n      })\r\n      .then(json => this.addPieces(json, this.artist_pieces))\r\n  }\r\n\r\n  @action addPieces(json,array) {\r\n    const pieces = [];\r\n    Object.values(json).forEach((piece) => {\r\n      pieces.push(new Piece(\r\n        piece.AUTHOR,\r\n        piece.TITLE,\r\n        piece.DATE,\r\n        piece.TIMEFRAME,\r\n        piece.TECHNIQUE,\r\n        piece.LOCATION,\r\n        piece.DESCRIPTIONS,\r\n        piece.FORM,\r\n        piece.SCHOOL,\r\n        piece.IMAGE_URL))\r\n    });\r\n    array.replace(pieces)\r\n  }\r\n\r\n  @action getSelectedPiece() {\r\n    return this.selectedPiece;\r\n  }\r\n}\r\n","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/store/SearchStore.js",["67","68"],"import { observable, action, computed } from \"mobx\";\r\n\r\nexport default class SearchStore {\r\n  rootStore;\r\n\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable query = \"\";\r\n\r\n  @action setQuery(query) {\r\n    this.query = query;\r\n  }\r\n\r\n  @action clear() {\r\n    this.rootStore.pieceStore.clear();\r\n  }\r\n\r\n  @action clearQuery() {\r\n    this.query = \"\";\r\n  }\r\n\r\n  @action getPieces() {\r\n    return this.rootStore.pieceStore.pieces;\r\n  }\r\n\r\n  @action getArtistPieces() {\r\n    return this.rootStore.pieceStore.artist_pieces;\r\n  }\r\n\r\n  @action getQuery() {\r\n    return this.query;\r\n  }\r\n\r\n  @action selectPiece(piece) {\r\n    this.rootStore.pieceStore.getArtistPieces(piece.author_no_format);\r\n    this.rootStore.pieceStore.selectedPiece = piece;\r\n  }\r\n\r\n  @action searchPieces() {\r\n    if(this.query != \"\"){\r\n      this.rootStore.pieceStore.searchPiece(this.query);\r\n    }\r\n  }\r\n}\r\n","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/components/SearchBar.js",["69"],"import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst SearchBar = observer(({ onSearch, onChange, query }) => (\r\n  <div style={{padding: \"1em 5em 1em 5em\"}}>\r\n    <Form.Control\r\n     type=\"text\"\r\n     key=\"random1\"\r\n     placeholder={query != \"\" ? query : \"Search\"}\r\n     onChange={onChange}\r\n     onKeyPress={event => event.key === \"Enter\" && onSearch()}\r\n    />\r\n  </div>\r\n));\r\n\r\n\r\nexport default SearchBar;\r\n","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/components/PieceCard.js",[],"/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/components/NavigBar.js",["70","71"],"import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport SearchBar from './SearchBar'\n\nimport NavBar from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nimport logo from '../resources/images/logo.png';\n\nconst NavigBar = observer(({ onSearch, onChange, getQuery, onClick }) => (\n  <Container fluid>\n    <Row>\n      <Col>\n        <img\n          style = {{cursor:'pointer', marginTop:'0.4em'}}\n          width=\"50\"\n          onClick={onClick}\n          src={logo}\n        />\n      </Col>\n      <Col xs={10}>\n        <div>\n          <SearchBar\n           onChange={onChange}\n           query = {getQuery}\n           onSearch={onSearch}\n          />\n        </div>\n      </Col>\n      <Col/>\n    </Row>\n  </Container>\n));\n\nexport default NavigBar;\n","/home/p/Documents/ttds/TTDS-Art-Search/art_se/src/components/ScrollUp.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":21,"column":15,"nodeType":"82","endLine":24,"endColumn":17},{"ruleId":"76","severity":1,"message":"83","line":12,"column":8,"nodeType":"78","messageId":"79","endLine":12,"endColumn":16},{"ruleId":"76","severity":1,"message":"84","line":13,"column":8,"nodeType":"78","messageId":"79","endLine":13,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":40,"column":15,"nodeType":"82","endLine":43,"endColumn":17},{"ruleId":"76","severity":1,"message":"85","line":1,"column":30,"nodeType":"78","messageId":"79","endLine":1,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":3,"column":1,"nodeType":"88","messageId":"89","endLine":5,"endColumn":2},{"ruleId":"90","severity":1,"message":"91","line":8,"column":11,"nodeType":"92","messageId":"89","endLine":8,"endColumn":13},{"ruleId":"76","severity":1,"message":"85","line":1,"column":30,"nodeType":"78","messageId":"79","endLine":1,"endColumn":38},{"ruleId":"90","severity":1,"message":"93","line":42,"column":19,"nodeType":"92","messageId":"89","endLine":42,"endColumn":21},{"ruleId":"90","severity":1,"message":"93","line":11,"column":25,"nodeType":"92","messageId":"89","endLine":11,"endColumn":27},{"ruleId":"76","severity":1,"message":"94","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":17,"column":9,"nodeType":"82","endLine":22,"endColumn":11},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'CardColumns' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Collapse' is defined but never used.","'Button' is defined but never used.","'computed' is defined but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'NavBar' is defined but never used.","no-global-assign","no-unsafe-negation"]